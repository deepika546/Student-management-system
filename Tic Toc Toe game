import java.util.Scanner;

class TicTacToe {
    char[][] board;
    char currentPlayer;

    public TicTacToe() {  // Constructor to initialize board and player
        board = new char[][]{
                {'1', '2', '3'},
                {'4', '5', '6'},
                {'7', '8', '9'}
        };
        currentPlayer = 'X';  // X starts first
    }

    public void displayBoard() {
        System.out.println(" " + board[0][0] + " | " + board[0][1] + " | " + board[0][2]);
        System.out.println("-----------");
        System.out.println(" " + board[1][0] + " | " + board[1][1] + " | " + board[1][2]);
        System.out.println("-----------");
        System.out.println(" " + board[2][0] + " | " + board[2][1] + " | " + board[2][2]);
        System.out.println();
    }

    public void makeMove() {
        Scanner sc = new Scanner(System.in);
        int move;
        boolean validMove = false;

        while (!validMove) { // Loop until player makes a valid move
            System.out.println("Player " + currentPlayer + ", enter your move (1-9): ");
            move = sc.nextInt();

            if (move >= 1 && move <= 9) {
                int row = (move - 1) / 3;
                int col = (move - 1) % 3;

                if (board[row][col] != 'X' && board[row][col] != 'O') {
                    board[row][col] = currentPlayer;
                    validMove = true;
                } else {
                    System.out.println("❌ Position already taken! Try again.");
                }
            } else {
                System.out.println("❌ Invalid move! Enter a number between 1-9.");
            }
        }
    }

    public void switchPlayer() { // Change turn after every move
        currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
    }

    public boolean checkWinner() {
        // Rows Check
        for (int i = 0; i < 3; i++) {
            if (board[i][0] == board[i][1] && board[i][1] == board[i][2]) {
                return true;  // Row match ho gyi, winner mil gya!
            }
        }

        // Columns Check
        for (int i = 0; i < 3; i++) {
            if (board[0][i] == board[1][i] && board[1][i] == board[2][i]) {
                return true;  // Column match ho gya, winner mil gya!
            }
        }

        // Diagonal Check
        if (board[0][0] == board[1][1] && board[1][1] == board[2][2]) {
            return true;  // Main diagonal match ho gyi
        }
        if (board[0][2] == board[1][1] && board[1][1] == board[2][0]) {
            return true;  // Other diagonal match ho gyi
        }

        return false;  // Koi winner nhi mila, game continue rahega
    }


public void playGame() {
    for (int i = 0; i < 9; i++) {
        displayBoard();
        makeMove();
        if (checkWinner()) {
            displayBoard();
            System.out.println("Player " + currentPlayer + " wins!");
            return;
        }
        currentPlayer = (currentPlayer == 'X') ? 'O' : 'X'; // Switch Player
    }
    displayBoard();
    System.out.println("It's a draw!");
}
}

public class Main {
    public static void main(String[] args) {
        TicTacToe game = new TicTacToe();
        game.playGame();
    }
}
